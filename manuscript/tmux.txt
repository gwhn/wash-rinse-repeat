# tmux

## Introduction

tmux is a terminal multiplexer which allows a single environment to launch
multiple terminals, with each running it's own process or program. It can do
that and much more without using the mouse.

## Installation

Using Homebrew: `$ brew install tmux`

Using MacPorts: `$ sudo port install tmux`

Using Ubuntu: `$ sudo apt-get install tmux`

To test installation: `$ tmux -V` should indicate version.

## Basics

To start: `$ tmux`

To finish: `$ exit`

To create a session named basic: `$ tmux new-session -s basic` or `$ tmux new -s basic`

To detach a session: `prefix d`

**By default, `prefix` is bound to `<CTRL-b>`, but my `.tmux.conf` rebinds it to
`<CTRL-a>`.**

To list key bindings and their associated commands: `prefix ?`

To list existing sessions: `$ tmux list-sessions` or `$ tmux ls`

If there is only one session running, attach to it with: `$ tmux attach`,
otherwise, attach to it by name using: `$ tmux attach -t {name}`. 

The `-t` switch specifies the target.

The `-f` switch specifies the path to a configuration file.

To destroy a session by name: `$ tmux kill-session -t {name}`

To enter command mode: `prefix :`

To enter copy mode: `prefix [` 

To move around the buffer in copy mode use `h`, `j`, `k` and `l`. 
Use `w` to jump to the next word. 
Use `b` to jump to the previous word. 
Use `f{char}` to jump forward to that first character on the same line. 
Use `F{char}` to jump backwards to that first character on the same line. 
Use `<CTRL-b>` to move up one page. 
Use `<CTRL-f>` to move down one page. 
Use `g` to jump to the top of the buffer's history. 
Use `G` to jump to the bottom of the buffer's history.

To search upwards in copy mode: `?{term}<RETURN>`.
To search downwards in copy mode use `/{term}<RETURN>`
Use `n` to jump to the next occurrence.
Use `N` to jump to the previous occurrence.

To copy text in copy mode, move the cursor to the start of the selection, then
press `<SPACE>` and move the cursor to the end of the selection, then press
`<RETURN>`.

To paste text in copy mode: `prefix ]`

To capture the visible content of a pane from command mode: `: capture-pane`

To exit copy mode: `<RETURN>`

## Windows

To create a session with a named window, use the `-n` flag: `$ tmux new -s
windows -n shell`

To create a window: `prefix c`

To rename a window: `prefix ,`

To move to the next window: `prefix n` or `prefix <CTRL-l>`

To move to the previous window: `prefix p` or `prefix <CTRL-h>`

To move to a window by index: `prefix {index}`, where index is number starting
at 0.

To find a window by name: `prefix f`, then enter the name.

To display a list of windows: `prefix w`

To display a list of sessions: `prefix s`

To close a window, either type `exit` at the prompt, or: `prefix &` and
confirm.

To create a pane from a window: `: join-pane -s {session}:{window}.{pane}`

## Panes

To create a vertical split pane: `prefix %` or `prefix |`

To create a horizontal split pane: `prefix "` or `prefix -`

To cycle through panes: `prefix o`

Use `prefix h`, `prefix j`, `prefix k`, `prefix l` to move between panes.

To cycle through pane layouts: `prefix <SPACE>`

To increase size of left pane: `prefix L`. To increase size of right pane:
`prefix H`. To increase size of top pane: `prefix J`. To increase size of
bottom pane: `prefix K`. 

To close a pane: `prefix x` and confirm.

To create a window from a pane: `prefix !`

## Customization

For system configuration: `/etc/tmux.conf`

For current user configuration: `~/.tmux.conf`

To reload the configuration: `: source-file ~/.tmux.conf` or `prefix r`

Use `-g` switch for global options.

Use `set-option` or `set` command to set options.

Use `unbind-key` or `unbind` command to remove key bindings.

Use `bind-key` or `bind` command to add key bindings.

Use `set-window-option` or `setw` command to set window options.

## Tmuxinator

Use tmuxinator Rubygem to manage configurations.

To install: `$ gem install tmuxinator`

To create a new configuration: `$ tmuxinator open {name}`

Example of configuration named dev:

    # ~/.tmuxinator/dev.yml

    name: dev
    root: ~/Projects

    windows:
      - editor:
          layout: main-horizontal
          panes:
            - vim
            - #empty
      - console: #empty

To start the environment: `$ tmuxinator {name}`

## References

[tmux Productive Mouse-Free Development](https://pragprog.com/book/bhtmux/tmux)

[gwhn/tmux-config on Github](https://github.com/gwhn/tmux-config)
